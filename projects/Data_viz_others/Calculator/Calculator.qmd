---
title: "Crunching Numbers with Style: Building a Sleek Calculator in HTML"
author: "Orozco Karol M."
date: "07-04-2023"
image: calculator.jpg
format:
  html:
    toc: true
    toc-location: right
    html-math-method: katex
    page-layout: full
execute: 
  warning: false
  message: false
categories: [html, JavaScript]
---

### Building a Calculator in HTML

In this article, we will explore how to create a simple calculator using HTML. The calculator will provide basic arithmetic operations such as addition, subtraction, multiplication, division, and modulus.

```{=html}
<!DOCTYPE html>
<html>
<head>
  <title>Calculator</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: left;
      background-color: #f7f7f7;
    }

    .calculator {
      width: 300px;
      margin: 0 auto;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: #fff;
      padding: 20px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
      color: #333;
      font-size: 24px;
      margin-bottom: 20px;
    }

    input[type="text"] {
      width: 100%;
      margin-bottom: 20px;
      padding: 10px;
      font-size: 20px;
    }

    .btn-row {
      display: flex;
      justify-content: space-between;
    }

    .btn {
      width: 23%;
      padding: 10px;
      margin-bottom: 10px;
      font-size: 12px;
      border-radius: 5px;
      background-color: #eee;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn:hover {
      background-color: #ddd;
    }

    .btn.operation {
      background-color: #337ab7;
      color: #fff;
    }

    .btn.operation:hover {
      background-color: #23527c;
    }

    .btn.equal {
      background-color: #5cb85c;
      color: #fff;
    }

    .btn.equal:hover {
      background-color: #449d44;
    }

    .btn.clear {
      background-color: #d9534f;
      color: #fff;
    }

    .btn.clear:hover {
      background-color: #c9302c;
    }
  </style>
</head>
<body>
  <div class="calculator">
    <h1>Calculator</h1>
    <input type="text" id="result" readonly>
    <div class="btn-row">
      <input type="button" class="btn clear" value="Clear" onclick="clearResult()">
      <input type="button" class="btn operation" value="/" onclick="appendToResult('/')">
      <input type="button" class="btn operation" value="*" onclick="appendToResult('*')">
      <input type="button" class="btn operation" value="-" onclick="appendToResult('-')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="7" onclick="appendToResult('7')">
      <input type="button" class="btn" value="8" onclick="appendToResult('8')">
      <input type="button" class="btn" value="9" onclick="appendToResult('9')">
      <input type="button" class="btn operation" value="+" onclick="appendToResult('+')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="4" onclick="appendToResult('4')">
      <input type="button" class="btn" value="5" onclick="appendToResult('5')">
      <input type="button" class="btn" value="6" onclick="appendToResult('6')">
      <input type="button" class="btn operation" value="%" onclick="appendToResult('%')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="1" onclick="appendToResult('1')">
      <input type="button" class="btn" value="2" onclick="appendToResult('2')">
      <input type="button" class="btn" value="3" onclick="appendToResult('3')">
      <input type="button" class="btn equal" value="=" onclick="calculateResult()">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="0" onclick="appendToResult('0')">
      <input type="button" class="btn" value="." onclick="appendToResult('.')">
    </div>
  </div>

  <script>
    function appendToResult(value) {
      document.getElementById('result').value += value;
    }

    function calculateResult() {
      const result = eval(document.getElementById('result').value);
      document.getElementById('result').value = result;
    }

    function clearResult() {
      document.getElementById('result').value = '';
    }
  </script>
</body>
</html>

    </div>
```
#### HTML Structure

First, let's take a look at the HTML structure of our calculator:

``` {.sourceCode .html}

<!DOCTYPE html>
<html>
<head>
  <title>Calculator</title>
 
```

We have a basic HTML structure with a

<head>

section for the title and CSS styles, and a

<body>

section that contains the calculator's content and JavaScript logic.

#### Calculator Layout and Styles

These CSS styles define the formatting for various elements of the calculator interface. The body style specifies the font family, text alignment, and background color for the entire document. The .calculator class defines the appearance of the calculator container, including its width, margin, border, border radius, background color, padding, and box shadow. The h1 style sets the color, font size, and margin bottom for the heading element. The input\[type="text"\] style applies to text input fields and sets their width, margin bottom, padding, and font size.

``` {.sourceCode .html}

  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f7f7f7;
    }

    .calculator {
      width: 300px;
      margin: 0 auto;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: #fff;
      padding: 20px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
      color: #333;
      font-size: 24px;
      margin-bottom: 20px;
    }

    input[type="text"] {
      width: 100%;
      margin-bottom: 20px;
      padding: 10px;
      font-size: 20px;
    }

    .btn-row {
      display: flex;
      justify-content: space-between;
    }

    .btn {
      width: 23%;
      padding: 10px;
      margin-bottom: 10px;
      font-size: 18px;
      border-radius: 5px;
      background-color: #eee;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn:hover {
      background-color: #ddd;
    }

    .btn.operation {
      background-color: #337ab7;
      color: #fff;
    }

    .btn.operation:hover {
      background-color: #23527c;
    }

    .btn.equal {
      background-color: #5cb85c;
      color: #fff;
    }

    .btn.equal:hover {
      background-color: #449d44;
    }

    .btn.clear {
      background-color: #d9534f;
      color: #fff;
    }

    .btn.clear:hover {
      background-color: #c9302c;
    }
  </style>
```

The .btn-row class ensures that the button rows are displayed as flex containers with space between the buttons. The .btn class defines the common styles for buttons, such as width, padding, margin bottom, font size, border radius, background color, cursor, and transition effects. The .btn:hover style changes the background color of buttons when hovered over. The .btn.operation class targets operation buttons specifically and sets a different background color and text color for them. The .btn.operation:hover style applies a different background color to operation buttons when hovered over.

Similarly, the .btn.equal and .btn.clear classes define styles for the equal and clear buttons, respectively, including their background color and text color. The corresponding :hover styles change the background color of these buttons when hovered over.

#### Calculator Content

Inside the calculator, we'll include the calculator's content, which consists of the heading, input field for displaying the result, and buttons for user interaction. Here's the code:

``` {.sourceCode .html}

  <div class="calculator">
    <h1>Calculator</h1>
    <input type="text" id="result" readonly>
    <div class="btn-row">
      <input type="button" class="btn clear" value="Clear" onclick="clearResult()">
      <input type="button" class="btn operation" value="/" onclick="appendToResult('/')">
      <input type="button" class="btn operation" value="*" onclick="appendToResult('*')">
      <input type="button" class="btn operation" value="-" onclick="appendToResult('-')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="7" onclick="appendToResult('7')">
      <input type="button" class="btn" value="8" onclick="appendToResult('8')">
      <input type="button" class="btn" value="9" onclick="appendToResult('9')">
      <input type="button" class="btn operation" value="+" onclick="appendToResult('+')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="4" onclick="appendToResult('4')">
      <input type="button" class="btn" value="5" onclick="appendToResult('5')">
      <input type="button" class="btn" value="6" onclick="appendToResult('6')">
      <input type="button" class="btn operation" value="%" onclick="appendToResult('%')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="1" onclick="appendToResult('1')">
      <input type="button" class="btn" value="2" onclick="appendToResult('2')">
      <input type="button" class="btn" value="3" onclick="appendToResult('3')">
      <input type="button" class="btn equal" value="=" onclick="calculateResult()">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="0" onclick="appendToResult('0')">
      <input type="button" class="btn" value="." onclick="appendToResult('.')">
    </div>
  </div>
```

The calculator content includes the heading "Calculator," an input field for displaying the result with the ID "result," and several

<div>

sections for organizing the rows of buttons. Each button has an assigned value and an onclick attribute that triggers JavaScript functions to perform specific actions.

#### JavaScript Logic

To enable the calculator's functionality, we need to define JavaScript functions that handle button clicks and perform calculations. Here's the JavaScript code:

``` {.sourceCode .html}

  <script>
    function appendToResult(value) {
      document.getElementById('result').value += value;
    }

    function calculateResult() {
      const result = eval(document.getElementById('result').value);
      document.getElementById('result').value = result;
    }

    function clearResult() {
      document.getElementById('result').value = '';
    }
  </script>
```

The JavaScript functions include appendToResult(value) to append values to the result input field, calculateResult() to evaluate the mathematical expression and update the result, and clearResult() to clear the result input field.

#### Putting It All Together

By combining the HTML structure, CSS styles, calculator content, and JavaScript logic, we create a fully functional calculator. Users can input numbers and perform basic arithmetic operations by clicking the corresponding buttons.

The complete code for the calculator can be found below:

``` {.sourceCode .html}
<!DOCTYPE html>
<html>
<head>
  <title>Calculator</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f7f7f7;
    }

    .calculator {
      width: 300px;
      margin: 0 auto;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: #fff;
      padding: 20px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
      color: #333;
      font-size: 24px;
      margin-bottom: 20px;
    }

    input[type="text"] {
      width: 100%;
      margin-bottom: 20px;
      padding: 10px;
      font-size: 20px;
    }

    .btn-row {
      display: flex;
      justify-content: space-between;
    }

    .btn {
      width: 23%;
      padding: 10px;
      margin-bottom: 10px;
      font-size: 18px;
      border-radius: 5px;
      background-color: #eee;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn:hover {
      background-color: #ddd;
    }

    .btn.operation {
      background-color: #337ab7;
      color: #fff;
    }

    .btn.operation:hover {
      background-color: #23527c;
    }

    .btn.equal {
      background-color: #5cb85c;
      color: #fff;
    }

    .btn.equal:hover {
      background-color: #449d44;
    }

    .btn.clear {
      background-color: #d9534f;
      color: #fff;
    }

    .btn.clear:hover {
      background-color: #c9302c;
    }
  </style>
</head>
<body>
  <div class="calculator">
    <h1>Calculator</h1>
    <input type="text" id="result" readonly>
    <div class="btn-row">
      <input type="button" class="btn clear" value="Clear" onclick="clearResult()">
      <input type="button" class="btn operation" value="/" onclick="appendToResult('/')">
      <input type="button" class="btn operation" value="*" onclick="appendToResult('*')">
      <input type="button" class="btn operation" value="-" onclick="appendToResult('-')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="7" onclick="appendToResult('7')">
      <input type="button" class="btn" value="8" onclick="appendToResult('8')">
      <input type="button" class="btn" value="9" onclick="appendToResult('9')">
      <input type="button" class="btn operation" value="+" onclick="appendToResult('+')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="4" onclick="appendToResult('4')">
      <input type="button" class="btn" value="5" onclick="appendToResult('5')">
      <input type="button" class="btn" value="6" onclick="appendToResult('6')">
      <input type="button" class="btn operation" value="%" onclick="appendToResult('%')">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="1" onclick="appendToResult('1')">
      <input type="button" class="btn" value="2" onclick="appendToResult('2')">
      <input type="button" class="btn" value="3" onclick="appendToResult('3')">
      <input type="button" class="btn equal" value="=" onclick="calculateResult()">
    </div>
    <div class="btn-row">
      <input type="button" class="btn" value="0" onclick="appendToResult('0')">
      <input type="button" class="btn" value="." onclick="appendToResult('.')">
    </div>
  </div>

  <script>
    function appendToResult(value) {
      document.getElementById('result').value += value;
    }

    function calculateResult() {
      const result = eval(document.getElementById('result').value);
      document.getElementById('result').value = result;
    }

    function clearResult() {
      document.getElementById('result').value = '';
    }
  </script>
</body>
</html>
```
