"0","# specify the model to be used (i.e. KNN, Naive Bayes, decision tree, random forest, bagged trees) and the tuning parameters used"
"0",""
"0",""
"0",""
"0","set.seed(504) "
"0",""
"0","bank_index <- createDataPartition(banksy$churn, p = 0.80, list = FALSE)"
"0","train <- banksy[ bank_index, ]"
"0","test <- banksy[-bank_index, ]"
"0",""
"0","# example spec for rf"
"0","fit <- train(churn ~ .,"
"0","             data = train, "
"0","             method = ""knn"","
"0","             preProcess = c(""center"",""scale""),"
"0","             tuneGrid = expand.grid(k = seq(31,41,2)), # best K between 31 and 41 "
"0","             metric = ""ROC"","
"0","             trControl = ctrl)"
"0",""
"0","fit"
"1","k-Nearest Neighbors"
"1"," "
"1","

"
"1","8102"
"1",""
"1"," samples"
"1","
"
"1","   5"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","   2"
"1"," "
"1","classes:"
"1"," "
"1","'no', 'yes'"
"1"," "
"1","
"
"1","
"
"1","Pre-processing: centered (5), scaled (5)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (3 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","5401, 5402, 5401"
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  k "
"1","  ROC      "
"1","  Sens     "
"1","  Spec     "
"1","
"
"1","  31"
"1","  0.9388497"
"1","  0.9677940"
"1","  0.5814132"
"1","
"
"1","  33"
"1","  0.9389534"
"1","  0.9673527"
"1","  0.5806452"
"1","
"
"1","  35"
"1","  0.9388799"
"1","  0.9677940"
"1","  0.5760369"
"1","
"
"1","  37"
"1","  0.9390690"
"1","  0.9676468"
"1","  0.5691244"
"1","
"
"1","  39"
"1","  0.9382645"
"1","  0.9676467"
"1","  0.5714286"
"1","
"
"1","  41"
"1","  0.9378081"
"1","  0.9672054"
"1","  0.5675883"
"1","
"
"1","
"
"1","ROC was used to select the optimal model using the largest value.
"
"1","The final value used for the model was k = 37."
"1","
"
"0","confusionMatrix(predict(fit, test),factor(test$churn))"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","   no"
"1","  yes"
"1","
       no "
"1"," 1640"
"1","  117"
"1","
       yes"
"1","   60"
"1","  208"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.9126          "
"1","
"
"1","                 95% CI :"
"1"," (0.8994, 0.9245)"
"1","
"
"1","    No Information Rate :"
"1"," 0.8395          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," < 2.2e-16       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.6509          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 2.563e-05       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.9647          "
"1","
"
"1","            Specificity :"
"1"," 0.6400          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9334          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.7761          "
"1","
"
"1","             Prevalence :"
"1"," 0.8395          "
"1","
"
"1","         Detection Rate :"
"1"," 0.8099          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.8677          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.8024          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," no              "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","myRoc <- roc(test$churn, predict(fit, test, type=""prob"")[,2])"
"2","Setting levels: control = no, case = yes
"
"2","Setting direction: controls < cases
"
"0","plot(myRoc)"
